local augroup = vim.api.nvim_create_augroup('LspFormatting', {})

return {
  'nvimtools/none-ls.nvim',
  config = function()
    local null_ls = require 'null-ls'
    null_ls.setup {
      sources = {
        require 'none-ls.diagnostics.null',
        require 'none-ls.formatting.black',
        require 'none-ls.diagnostics.ruff',
        require 'none-ls.diagnostics.mypy',
        -- null_ls.builtins.formatting.black,
        -- null_ls.builtins.diagnostics.ruff,
        -- null_ls.builtins.diagnostics.mypy.with {
        --   extra_args = function()
        --     local virtual = os.getenv 'VIRTUAL_ENV' or os.getenv 'CONDA_PREFIX' or '/usr'
        --     return { '--python-executable', virtual .. '/bin/python3' }
        --   end,
        -- },
      },
    }
  end,
  ft = { 'python' },
  opts = {
    on_attach = function(client, bufnr)
      if client.supports_method 'textDocument/formatting' then
        vim.api.nvim_clear_autocmds {
          group = augroup,
          buffer = bufnr,
        }
        vim.api.nvim_create_autocmd('BufWritePre', {
          group = augroup,
          buffer = bufnr,
          callback = function()
            vim.lsp.buf.format { bufnr = bufnr }
          end,
        })
      end
    end,
  },
}
